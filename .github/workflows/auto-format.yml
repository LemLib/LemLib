name: format-code

on: [push]

permissions:
  contents: write

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Cache clang-format
      uses: actions/cache@v2
      with:
        path: /usr/lib/llvm-10/bin/clang-format
        key: ${{ runner.os }}-clang-format-${{ steps.date.outputs.date }}
        restore-keys: ${{ runner.os }}-clang-format-

    - name: Install clang-format
      run: |
        if [ ! -f /usr/lib/llvm-10/bin/clang-format ]; then
          sudo apt-get install -y clang-format
        fi

    - name: Output clang-format version
      run: clang-format --version

    - name: Check for changes in .cpp, .hpp, .h files
      id: check-changes
      run: |
        git fetch origin
        changed_files=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} -- '*.cpp' '*.hpp' '*.h')
        if [ -z "$changed_files" ]; then
          echo "::set-output name=all_files::true"
        else
          echo "::set-output name=all_files::false"
        fi

    - name: Format code
      run: |
        if [ "${{ steps.check-changes.outputs.all_files }}" == "true" ]; then
          echo "No .cpp, .hpp, or .h files were changed in the last commit. Formatting all .cpp, .hpp, and .h files in the repository."
          find . -name '*.cpp' -or -name '*.hpp' -or -name '*.h' | while read filename; do
            clang-format -i $filename
          done
        else
          changed_files=$(git diff --name-only HEAD^)
          echo "$changed_files" | while read filename; do
            if [[ $filename == *.cpp || $filename == *.hpp || $filename == *.h ]]; then
              clang-format -i $filename
            fi
          done
        fi

    - name: Check for changes
      run: git diff

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git diff --quiet || git commit -am "Automatically format code"
        git push