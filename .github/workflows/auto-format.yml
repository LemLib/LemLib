name: format-code

on: [push]

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get current date and week number
      id: date
      run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          echo "::set-output name=week::$(($(date +'%U') / 2))"
  
    - name: Cache clang-format
      uses: actions/cache@v2
      with:
          path: /usr/lib/llvm-10/bin/clang-format
          key: ${{ runner.os }}-clang-format-${{ steps.date.outputs.week }}
          restore-keys: ${{ runner.os }}-clang-format-

    - name: Install clang-format
      run: |
        if [ ! -f /usr/lib/llvm-10/bin/clang-format ]; then
          sudo apt-get install -y clang-format
        fi

  clang-format-version:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Output clang-format version
        run: clang-format --version

  check-file-changes:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for changes in .cpp, .hpp, .h files in src/lemlib and include/lemlib
        id: check-file-changes
        run: |
          git fetch origin
          changed_files=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} -- 'src/lemlib/*.cpp' 'src/lemlib/*.hpp' 'src/lemlib/*.h' 'include/lemlib/*.cpp' 'include/lemlib/*.hpp' 'include/lemlib/*.h')
          if [ -z "$changed_files" ]; then
            echo "::set-output name=all_files::true"
          else
            echo "::set-output name=all_files::false"
            echo "::set-output name=changed_files::$changed_files"
          fi

          format:
            needs: [clang-format-version, check-file-changes]
            runs-on: ubuntu-latest
            strategy:
              matrix:
                file_type: ['*.cpp', '*.hpp', '*.h']
            steps:
              - name: Checkout code
                uses: actions/checkout@v2
                with:
                  fetch-depth: 0
          
              - name: Format code
                run: |
                  if [ "${{ steps.check-file-changes.outputs.all_files }}" == "true" ]; then
                    echo "No ${file_type} files were changed in the last commit in src/lemlib and include/lemlib. Formatting all ${file_type} files in these directories."
                    find ./src/lemlib ./include/lemlib -name '${{ matrix.file_type }}' | while read filename; do
                      clang-format -i $filename
                    done
                  else
                    echo "${{ steps.check-file-changes.outputs.changed_files }}" | while read filename; do
                      if [[ $filename == *${{ matrix.file_type }} ]]; then
                        clang-format -i $filename
                      fi
                    done
                  fi
          
              - name: Check for changes
                id: check-format-changes
                run: |
                   git diff --exit-code -- 'src/lemlib/${{ matrix.file_type }}' 'include/lemlib/${{ matrix.file_type }}' || echo "::set-output name=changes::true"
                continue-on-error: true
          
              - name: Commit changes
                run: |
                  if [[ "${{ steps.check-format-changes.outputs.changes }}" == "true" ]]; then
                    git config --local user.email "action@github.com"
                    git config --local user.name "GitHub Action"
                    git add .
                    git commit -m "Automated code formatting"
                    git push
                  fi